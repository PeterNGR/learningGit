<!-- INTRODUCCIÓN - ¿ QUE ES GIT ? -->

    - Git es un sistema de control de versiones distribuido gratuito 
    y de código abierto diseñado para manejar todo, desde proyectos pequeños
    hasta proyectos muy grandes, con rapidez y eficiencia.

    - Git es fácil de aprender y ocupa poco espacio con un rendimiento ultrarrápido.
    Supera a las herramientas de SCM como Subversion, CVS, Perforce y ClearCase 
    con características como sucursales locales económicas , áreas de preparación 
    convenientes y múltiples flujos de trabajo .


<!-- COMANDOS DE GIT -->

    - Git init : Crea un repositorio Git vacío o reinicia uno existente.

    - Git add : Agregar contenido de archivo al índice.

    - Git add . : Agregar todos los archivos al índice.

    - Git add --patch : Agregar pedazos de código.

    - Git status : Mostrar el estado del árbol de trabajo.

    - Git commit : Registrar cambios en el repositorio.

    - Git diff : Mostrar cambios de los archivos.

    - Git log: Mostrar historial de commit

    - Git log --oneline : Mostrar historial de commit simplificado.

    - Git log --stat : Resumen de cambios en los commit.

    - Git log -p : Cambios en el código por commit.

    - Git branch : Mostrar todas las ramas.
  
    - Git branch "name" : Crear una nueva rama.

    - Git branch -r : Mostrar ramas remotas.

    - Git checkout "name" : Cambiar de rama según su nombre.

    - Git checkout -b "name" : Crear la rama y cambiar a ella.

    - Git merge : Combinar las ramas.

    - Git romote : Administrar un conjunto de repositorios rastreados.

    - Git remote add origin url : Agregar un conjunto de repositorios rastreados.

    - Git remote -v : Mostrar iformacion mas detallada del repositorios rastreados.

    - Git push "remote" "branch" : Actualizar referencias remotas junto con objetos asociados.

    - Git pull "remote" "branch" : Obtenga e integre con otro repositorio o una sucursal local.

    - Git fetch "remote" "branch" : Descargar objetos y referencias de otro repositorio.

    - Git clone "url" : Permite clonar un repositorio remoto.
 
    - Git log --oneline --graph --all : Mostrar todo el historial de commit

    - Git stash : Permite manipular y guardar código temporalmente sin hacer un commit.

    - Git stash pop :  Agrega los cambios en la rama que esta ubicado.

    - Git chackout "hash" : Entrar a commit según su hash  de id.

    - Git revert : Tomar el ultimo commit quita los cambios en un nuevo commit.

    - Git reset --hard "hash" : reierte cambios según el hash.

    - Git commit --amend : Mostrar cambios no deseados de commit.

    - Git rebase "rama" : Combina cambios entre ramas.